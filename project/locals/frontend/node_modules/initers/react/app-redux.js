var pageParams = require('./lib/page-params.js')

var initer = {
    /**
     * @param opts.routes   路由信息
     */
    init (opts) {
        opts = opts || {}

        var ReactDom = require('react-dom')
        var React = require('react')

        var {Provider} = require('react-redux')

        var {Router, hashHistory} = require('react-router')
        var {syncHistoryWithStore} = require('react-router-redux')

        const history = syncHistoryWithStore(hashHistory, this._store)

        ReactDom.render(
            <Provider store={this._store}>
                <Router history={history} routes={opts.routes}>
                </Router>
            </Provider>,
            document.getElementById('root')
        )
    },

    _store: null,

    configureStore (rootReducer = {}, initialState) {
        var thunk = require('redux-thunk').default
        var {createStore, compose, applyMiddleware, combineReducers} = require('redux')
        var {routerReducer} = require('react-router-redux')

        const middleware = [thunk]

        const finalCreateStore = compose(
            applyMiddleware(...middleware)
        )(createStore)

        rootReducer.routing = routerReducer
        rootReducer.pageParams = pageParams.reducer

        const store = this._store = finalCreateStore(combineReducers({...rootReducer}), initialState)
        store.rootReducer = rootReducer;
        store.asyncReducers = {}
        return store
    },

    injectReducer (reducerName, reducer) {
        var store = this._store

        store.asyncReducers[reducerName] = reducer
        console.log(require('redux'))
        var {combineReducers} = require('redux')

        store.replaceReducer(combineReducers({
            ...store.rootReducer,
            ...store.asyncReducers
        }))
    },

    dummyRoutes(reducerName, reducer, Page) {
        const appRoutes = {
            path: '/',
            indexRoute: {onEnter: (nextState, replace) => replace('/test')},
            childRoutes: [
                {
                    path: 'test',
                    getComponent: (location, callback) => {
                        require.ensure([], () => {
                            initer.injectReducer(reducerName, reducer)
                            callback(null, Page)
                        })
                    }
                }
            ]
        }

        return appRoutes
    },

    setPageParams(props) {
        pageParams.triggers.setPageParam(this._store.dispatch, props)
    }
}

module.exports = initer;