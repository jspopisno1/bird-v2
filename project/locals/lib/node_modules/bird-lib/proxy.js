
var url = require('url')
var utils = require('common/utils')
var birdUtils = require('bird-common/utils')

module.exports = function(config, middlewareName) {

    return function (req, res, next) {
        
        var urlParsed = url.parse(req.url);
        
        var routes = middlewareName ? config.middlewares[middlewareName] : config.routes;
        var server = config.servers[config.useServer];
        
        var filePath = utils.p(config.staticFileRootDirPath + '/' + urlParsed.pathname);
        var fileStat = birdUtils.stat(filePath)
        if (fileStat.exist) {

            // 如果目标为文件夹, 且我们设置了 defaultIndex 文件, 则看看这个文件在不在
            if (fileStat.isDirectory() && config.defaultIndex) {
                var indexFilePath = utils.p(filePath + '/' + config.defaultIndex)
                var indexFileStat = birdUtils.stat(indexFilePath)

                if (indexFileStat.exist && indexFileStat.isFile()) {
                    return res.sendFile(indexFilePath)
                }
            } else {
                return res.sendFile(filePath)
            }
        }
        
        return res.send([filePath, urlParsed.pathname])
        
        // if (true) {
        //     // 取得 req 的 headers
        //     var headers = req.headers;
        //
        //     headers.cookie = COOKIE || redeemCookieFromJar(jar.getCookies(TARGET_SERVER));
        //     // headers.host = config.host;
        //     // console.info("headers.cookie", headers.cookie)
        //     delete headers['x-requested-with'];
        //     var requestPath = router(urlParsed.path, ROUTER);
        //     // console.info('requestPath:', requestPath);
        //     var urlOptions = {
        //         host: url.parse(TARGET_SERVER).hostname,
        //         port: url.parse(TARGET_SERVER).port,
        //         path: requestPath,
        //         method: req.method,
        //         headers: headers,
        //         rejectUnauthorized: false
        //     };
        //     console.log('headers', headers);
        //     // proxy to target server
        //     var forwardUrl = url.resolve(TARGET_SERVER, requestPath);
        //     // log forwarding message
        //     console.info('fowarding', filePath.red, 'to', forwardUrl.cyan);
        //     var httpOrHttps = url.parse(TARGET_SERVER).protocol === 'http:' ? http : https;
        //     var forwardRequest = httpOrHttps.request(urlOptions, function (response) {
        //         // set headers to the headers in origin request
        //         res.writeHead(response.statusCode, response.headers);
        //         response.on('data', function (chunk) {
        //             // body += chunk;
        //             res.write(chunk);
        //         });
        //
        //         response.on('end', function () {
        //             // console.info(body)
        //             res.end();
        //         });
        //     });
        //     forwardRequest.on('error', function (e) {
        //         console.error('problem with request: ' + e.message);
        //     });
        //
        //     req.addListener('data', function (chunk) {
        //         forwardRequest.write(chunk);
        //     });
        //
        //     req.addListener('end', function () {
        //         forwardRequest.end();
        //     });
        // }
    }
}